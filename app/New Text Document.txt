from cs50 import SQL
from flask_session import Session
from flask import Flask, render_template, redirect, request, session
from datetime import datetime

# DEBUG = False
DEBUG = True

# Instantiate Flask object named app
app = Flask(__name__)

# Configure sessions
app.config["SESSION_PERMANENT"] = False
app.config["SESSION_TYPE"] = "filesystem"
Session(app)

# Creates a connection to the database
db = SQL("sqlite:///data.db")

@app.route("/")
def index():
    wines = db.execute("SELECT * FROM wines ORDER BY country ASC")
    winesLen = len(wines)
    shoppingCart = []
    shopLen = len(shoppingCart)
    totItems, total, display = 0, 0, 0
    if 'user' in session:
        shoppingCart = db.execute("SELECT country, image, SUM(qty), SUM(subTotal), price, id FROM cart GROUP BY country")
        shopLen = len(shoppingCart)
        for i in range(shopLen):
            total += shoppingCart[i]["SUM(subTotal)"]
            totItems += shoppingCart[i]["SUM(qty)"]
        wines = db.execute("SELECT * FROM wines ORDER BY country ASC")
        winesLen = len(wines)
        return render_template("index.html", shoppingCart=shoppingCart, wines=wines, shopLen=shopLen, winesLen=winesLen, total=total, totItems=totItems, display=display, session=session)
    return render_template("index.html", wines=wines, shoppingCart=shoppingCart, winesLen=winesLen, shopLen=shopLen, total=total, totItems=totItems, display=display)

@app.route("/buy/")
def buy():
    shoppingCart = []
    shopLen = len(shoppingCart)
    totItems, total, display = 0, 0, 0
    qty = int(request.args.get('quantity'))
    if session:
        id = int(request.args.get('id'))
        goods = db.execute("SELECT * FROM wines WHERE id = :id", id=id)
        price = goods[0]["onSalePrice"] if goods[0]["onSale"] == 1 else goods[0]["price"]
        country = goods[0]["country"]
        image = goods[0]["image"]
        subTotal = qty * price
        db.execute("INSERT INTO cart (id, qty, country, image, price, subTotal) VALUES (:id, :qty, :country, :image, :price, :subTotal)", 
                   id=id, qty=qty, country=country, image=image, price=price, subTotal=subTotal)
        shoppingCart = db.execute("SELECT country, image, SUM(qty), SUM(subTotal), price, id FROM cart GROUP BY country")
        shopLen = len(shoppingCart)
        for i in range(shopLen):
            total += shoppingCart[i]["SUM(subTotal)"]
            totItems += shoppingCart[i]["SUM(qty)"]
        wines = db.execute("SELECT * FROM wines ORDER BY country ASC")
        winesLen = len(wines)
        return render_template("index.html", shoppingCart=shoppingCart, wines=wines, shopLen=shopLen, winesLen=winesLen, total=total, totItems=totItems, display=display, session=session)

@app.route("/cart/")
def cart():
    if 'user' in session:
        totItems, total, display = 0, 0, 0
        shoppingCart = db.execute("SELECT country, image, SUM(qty), SUM(subTotal), price, id FROM cart GROUP BY country")
        shopLen = len(shoppingCart)
        for i in range(shopLen):
            total += shoppingCart[i]["SUM(subTotal)"]
            totItems += shoppingCart[i]["SUM(qty)"]
    return render_template("cart.html", shoppingCart=shoppingCart, shopLen=shopLen, total=total, totItems=totItems, display=display, session=session)

@app.route("/checkout/", methods=["GET", "POST"])
def checkout():
    if request.method == "GET":
        return render_template("checkout.html")
    elif request.method == "POST":
        card_number = request.form["cardNumber"]
        expiry = request.form["expiry"]
        cvv = request.form["cvv"]
        name = request.form["name"]
        order = db.execute("SELECT * FROM cart")
        total_amount = sum(item["subTotal"] for item in order)
        db.execute("DELETE FROM cart")
        return render_template("success.html", message="Thank you for your order! Your payment was successful.")

@app.route("/logout/")
def logout():
    db.execute("DELETE FROM cart")
    session.clear()
    return redirect("/")

if __name__ == "__main__":
    app.run(debug=True)